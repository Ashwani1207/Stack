long long getMaxArea(long long arr[], int n)
    {
        vector<int> rb(n,0);
        vector<int> lb(n,0);
        stack<int> str;
        rb[n-1]=n;
        str.push(n-1);
        for(int i=n-2;i>=0;i--)//to get the next smaller element on right
        {
            while(str.size()>0&&arr[i]<=arr[str.top()])
            str.pop();
            if(str.size()==0)
            rb[i]=n;
            else
            rb[i]=str.top();
            str.push(i);
        }
        stack<int> stl;
        lb[0]=-1;
        stl.push(0);
         for(int i=1;i<n;i++)//to get the next smaller element on right
        {
            while(stl.size()>0&&arr[i]<=arr[stl.top()])
            stl.pop();
            if(stl.size()==0)
            lb[i]=-1;
            else
            lb[i]=stl.top();
            stl.push(i);
        }
 long long maxarea=0;
 
        // Your code here
        
        for(int i=0;i<n;i++){
            long long width=(rb[i]-lb[i])-1;
            long long area=arr[i]*width;
            if(area>maxarea){
            maxarea=area;
          
            }
        }
       //for(int i=0;i<n;i++)
       //cout<<rb[i]<<"hi"<<lb[i]<<"hello"<<endl;
        return maxarea;
    }
