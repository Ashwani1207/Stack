int operator(char c){//for operator precedence
if(c=='+'||c=='-')
return 1;
else if(c=='/'||c=='*')
return 2;
}
int operation(int v1,int v2,char c){//to perform operation
if(c=='+')
return v1+v2;
else if(c=='-')
return v1-v2;
else if(c=='/')
return v1/v2;
else if(c=='*')
return v1*v2;
}
stack<int> si;//stack for operands
stack<char> sc;//stack for operators and braces
for(int i=0;i<str.length();i++){
if(s[i]=='(')
sc.push(s[i]);
else if(s[i]>=48 && s[i]<=57)
{
int val=s[i]-'0';
si.push(val);
}
else if(s[i]==')')
{
while(sc.top()!='(')//we goona pop until ( bracket strike
{
char c=sc.pop();
int v2=si.pop();
int v1=si.pop();  
int op=operation(v1,v2,c);
si.push(op);
}

sc.pop();

}
else if(s[i]=='+'||s[i]=='-'||s[i]=='*'||s[i]=='/'){
while(sc.size>0&&sc.top()!='('&&operator(s[i])<=operator(sc.top()))
{
char c=sc.pop();
int v2=si.pop();
int v1=si.pop();  
int op=operation(v1,v2,c);
si.push(op);
}
sc.push(s[i]);
}
}
while(sc.size()!=0)//in case loop terminated but elements are there 2+3*6
{
char c=sc.pop();
int v2=si.pop();
int v1=si.pop();  
int op=operation(v1,v2,c);
si.push(op);
}
cout<<si.top()<<endl;

